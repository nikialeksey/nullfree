plugins {
    id 'java-library'
    id 'jacoco'
    id 'com.jfrog.bintray' version '1.8.4'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.13.6'
    implementation 'org.apache.httpcomponents:httpclient:4.5.8'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

check.dependsOn jacocoTestReport

ext {
    bintrayName = 'nullfree'
    artifact = 'nullfree'
    libraryName = 'nullfree'

    libraryDescription = 'Null checking library'

    bintrayRepo = 'java'
    publishedGroupId = 'com.nikialeksey'

    siteUrl = 'https://github.com/nikialeksey/nullfree'
    gitUrl = 'https://github.com/nikialeksey/nullfree.git'

    libraryVersion = '1.4.2'

    developerId = 'nikialeksey'
    developerName = 'Alexey Nikitin'
    developerEmail = 'nikialeksey@gmail.com'
    licenseName = 'MIT License'
    licenseUrl = 'https://github.com/nikialeksey/nullfree/blob/master/LICENSE'
    allLicenses = ['MIT']
}
if (project.rootProject.file('local.properties').exists()) {
    apply plugin: 'maven'
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
    apply plugin: 'maven-publish'
    publishing {
        publications {
            nullfree_lib(MavenPublication) {
                artifact(javadocJar)
                artifact(sourcesJar)
                artifact("$buildDir/libs/lib-${libraryVersion}.jar")

                groupId publishedGroupId
                artifactId artifact
                version libraryVersion

                pom {
                    name = libraryName
                    description = libraryDescription

                    url = siteUrl

                    licenses {
                        license {
                            name = licenseName
                            url = licenseUrl
                        }
                    }
                    developers {
                        developer {
                            id = developerId
                            name = developerName
                            email = developerEmail
                        }
                    }
                    scm {
                        connection = gitUrl
                        developerConnection = gitUrl
                        url = siteUrl
                    }
                }

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', 'com.github.javaparser')
                    dependencyNode.appendNode('artifactId', 'javaparser-symbol-solver-core')
                    dependencyNode.appendNode('version', '3.13.6')

                    dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', 'org.apache.httpcomponents')
                    dependencyNode.appendNode('artifactId', 'httpclient')
                    dependencyNode.appendNode('version', '4.5.8')
                }
            }
        }
    }
    bintray.publications = ['nullfree_lib']
    bintray.configurations = []
}